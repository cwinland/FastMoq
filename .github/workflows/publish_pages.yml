name: Publish Pages

# Required permissions for GitHub Pages OIDC deployment token
permissions:
  contents: read      # to fetch the repository
  pages: write        # to publish to Pages
  id-token: write     # to request the OIDC token (fixes ACTIONS_ID_TOKEN_REQUEST_URL error)

on:
  # Publish only after CI succeeds or when manually dispatched
  workflow_run:
    workflows: ["CI (master)"]
    types: [ completed ]
  workflow_dispatch:

# Ensure only one Pages deployment runs at a time
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  deploy:
    # Only run for successful CI completion or manual dispatch
    if: >-
      ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Guard: Validate site content exists"
        run: |
          set -euo pipefail
          if [ ! -d Help ]; then
            echo "Help directory missing; aborting publish." >&2
            exit 1
          fi
          if [ ! -f Help/index.html ] && [ ! -f Help/Index.html ]; then
            echo "No index.html/Index.html in Help; aborting publish." >&2
            ls -al Help || true
            exit 1
          fi
          echo "Help directory and index file found. Proceeding."

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./Help  # adjust if your site source is elsewhere

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment summary
        if: success()
        run: |
          {
            echo "### Pages Deployment";
            echo "Commit: $GITHUB_SHA";
            echo "Actor: $GITHUB_ACTOR";
            if [ -n "${{ steps.deployment.outputs.page_url }}" ]; then
              echo "URL: ${{ steps.deployment.outputs.page_url }}";
            fi;
          } >> $GITHUB_STEP_SUMMARY
