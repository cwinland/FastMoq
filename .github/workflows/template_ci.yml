name: CI Template

on:
  workflow_call:
    inputs:
      projects:
        description: "Space-separated list of project paths to build/test"
        required: true
        type: string
      frameworks:
        description: "JSON array of SDK versions to build/test (e.g. [\"8.0.x\",\"9.0.x\"])"
        required: true
        type: string
      suppress_tfm_errors:
        description: "Whether to suppress TFM support build errors"
        required: false
        default: "true"
        type: string

jobs:
  codeql:
    uses: ./.github/workflows/codeql.yml

  build-test:
    needs: codeql
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        framework: ${{ fromJSON(inputs.frameworks) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Preâ€‘firewall environment setup
        run: |
          echo "Configuring environment before firewall restrictions..."
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          dotnet nuget add source https://api.nuget.org/v3/index.json --name nuget.org \
            --configfile $(dotnet nuget locals global-packages --list | cut -d' ' -f2)/NuGet.Config || true

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.framework }}

      - name: Install dependencies
        run: |
          for proj in ${{ inputs.projects }}; do
            dotnet restore "$proj"
          done

      - name: Build projects
        env:
          FW: ${{ matrix.framework }}
          SUPPRESS: ${{ inputs.suppress_tfm_errors }}
        run: |
          tfm="net${FW%%.*}"
          for proj in ${{ inputs.projects }}; do
            echo "Building $proj for $tfm..."
            if [ "$SUPPRESS" = "true" ]; then
              dotnet build "$proj" --framework "$tfm" -p:SuppressTfmSupportBuildErrors=true
            else
              dotnet build "$proj" --framework "$tfm"
            fi
          done

      - name: Test projects
        env:
          FW: ${{ matrix.framework }}
        run: |
          tfm="net${FW%%.*}"
          for proj in ${{ inputs.projects }}; do
            echo "Testing $proj for $tfm..."
            dotnet test "$proj" --framework "$tfm" --no-build
          done
