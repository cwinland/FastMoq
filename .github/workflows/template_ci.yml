name: CI Template

on:
  workflow_call:
    inputs:
      projects:
        required: true
        type: string
      frameworks:
        required: true
        type: string

jobs:
  codeql:
    uses: ./.github/workflows/codeql.yml

  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        framework: ${{ fromJSON(inputs.frameworks) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.framework }}

      - run: dotnet --info

      - name: Restore (TFM-scoped)
        env:
          FW: ${{ matrix.framework }}
        run: |
          tfm="net${FW%.*}"
          skipped=""
          for proj in ${{ inputs.projects }}; do
            if [[ "$tfm" == "net9.0" ]] && grep -q "<TargetFramework.*net6.0" "$proj"; then
              echo "Skipping restore for $proj on $tfm (contains net6.0)"
              skipped="$skipped\n[RESTORE] $proj ($tfm)"
              continue
            fi
            dotnet restore "$proj" --framework "$tfm"
          done
          echo -e "$skipped" > skipped.txt

      - name: Build (TFM-scoped)
        env:
          FW: ${{ matrix.framework }}
        run: |
          tfm="net${FW%.*}"
          skipped=""
          for proj in ${{ inputs.projects }}; do
            if [[ "$tfm" == "net9.0" ]] && grep -q "<TargetFramework.*net6.0" "$proj"; then
              echo "Skipping build for $proj on $tfm"
              skipped="$skipped\n[BUILD] $proj ($tfm)"
              continue
            fi
            dotnet build "$proj" --framework "$tfm" --no-restore
          done
          echo -e "$skipped" >> skipped.txt

      - name: Test (TFM-scoped)
        env:
          FW: ${{ matrix.framework }}
        run: |
          tfm="net${FW%.*}"
          skipped=""
          for proj in ${{ inputs.projects }}; do
            if [[ "$tfm" == "net9.0" ]] && grep -q "<TargetFramework.*net6.0" "$proj"; then
              echo "Skipping tests for $proj on $tfm"
              skipped="$skipped\n[TEST] $proj ($tfm)"
              continue
            fi
            dotnet test "$proj" --framework "$tfm" --no-build
          done
          echo -e "$skipped" >> skipped.txt

      - name: Summary of skipped projects
        if: always()
        run: |
          echo "### Skipped Projects Summary" >> $GITHUB_STEP_SUMMARY
          if [[ -s skipped.txt ]]; then
            cat skipped.txt >> $GITHUB_STEP_SUMMARY
          else
            echo "No projects were skipped." >> $GITHUB_STEP_SUMMARY
